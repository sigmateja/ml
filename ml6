import numpy as np
import matplotlib.pyplot as plt

def kernal(x,x0,tau):
  return np.exp(-((x-x0)**2/(2*tau**2)))
 
def predict(x_train,y_train,x0,tau):
  weights=kernal(x_train,x0,tau)
  W=np.diag(weights)
  X=np.c_[np.ones(len(x_train)),x_train]
  theta=np.linalg.pinv(X.T@W@X)@(X.T@W@y_train) 
  return np.array([1,x0])@theta

np.random.seed(42)
x=np.linspace(0,10,100)
y=np.sin(x)+np.random.normal(0,0.2,100)
x_test=np.linspace(0,10,100)

plt.figure(figsize=(10,6))
for tau in (0.1,0.5,1,5):
  y_pred=[predict(x,y,xi,tau)for xi in x_test]
  plt.plot(x_test,y_pred,label=f'tau={tau}')
plt.scatter(x,y,color='black',alpha=0.5,label='Data')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.grid(True)
plt.show()
