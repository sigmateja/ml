import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_olivetti_faces
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,classification_report
import warnings
warnings.filterwarnings('ignore')

faces=fetch_olivetti_faces()
X,y=faces.data,faces.target

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

model=GaussianNB()
model.fit(X_train,y_train)
y_pred=model.predict(X_test)

accuracy=accuracy_score(y_test,y_pred)
Classification_rep=classification_report(y_test,y_pred)
print(f"Accuracy:{accuracy:.2f}")
print(f"Classification Report:\n{Classification_rep}")

plt.figure(figsize=(10,6))
shown=set()
count=0
for i in range(len(X)):
  if y[i] not in shown:
    plt.subplot(4,10,count+1)
    plt.imshow(X[i].reshape(64,64),cmap='gray')
    plt.title(f'ID:{y[i]}')
    plt.axis('off')
    shown.add(y[i])
    count+=1
    if count==40:
      break
plt.suptitle('Sample Faces',fontsize=16)
plt.show()
